// <auto-generated />
using System;
using Inventory_Management__System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inventory_Management__System.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240825102012_IntialCreate")]
    partial class IntialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inventory_Management__System.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Electronics"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Groceries"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Clothing"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Books"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Furniture"
                        });
                });

            modelBuilder.Entity("Inventory_Management__System.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryID"));

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InventoryID");

                    b.HasIndex("ProductID")
                        .IsUnique();

                    b.ToTable("Inventories", (string)null);

                    b.HasData(
                        new
                        {
                            InventoryID = 1,
                            ProductID = 1,
                            Quantity = 50
                        },
                        new
                        {
                            InventoryID = 2,
                            ProductID = 2,
                            Quantity = 100
                        },
                        new
                        {
                            InventoryID = 3,
                            ProductID = 3,
                            Quantity = 200
                        },
                        new
                        {
                            InventoryID = 4,
                            ProductID = 4,
                            Quantity = 150
                        },
                        new
                        {
                            InventoryID = 5,
                            ProductID = 5,
                            Quantity = 300
                        });
                });

            modelBuilder.Entity("Inventory_Management__System.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("SellingPrice")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            CategoryID = 1,
                            Description = "15-inch laptop with 8GB RAM",
                            ProductName = "Laptop",
                            SellingPrice = 999.99m
                        },
                        new
                        {
                            ProductID = 2,
                            CategoryID = 1,
                            Description = "Latest model smartphone with 128GB storage",
                            ProductName = "Smartphone",
                            SellingPrice = 699.99m
                        },
                        new
                        {
                            ProductID = 3,
                            CategoryID = 3,
                            Description = "Comfortable blue jeans",
                            ProductName = "Jeans",
                            SellingPrice = 49.99m
                        },
                        new
                        {
                            ProductID = 4,
                            CategoryID = 5,
                            Description = "LED desk lamp with adjustable brightness",
                            ProductName = "Desk Lamp",
                            SellingPrice = 29.99m
                        },
                        new
                        {
                            ProductID = 5,
                            CategoryID = 2,
                            Description = "Whole grain cereal, 500g box",
                            ProductName = "Cereal",
                            SellingPrice = 3.99m
                        });
                });

            modelBuilder.Entity("Inventory_Management__System.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionID"));

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionID");

                    b.HasIndex("ProductID");

                    b.ToTable("Transactions", (string)null);

                    b.HasData(
                        new
                        {
                            TransactionID = 1,
                            Notes = "Initial stock purchase",
                            ProductID = 1,
                            Quantity = 50,
                            TransactionDate = new DateTime(2024, 8, 15, 13, 20, 11, 661, DateTimeKind.Local).AddTicks(211),
                            TransactionType = "Purchase"
                        },
                        new
                        {
                            TransactionID = 2,
                            Notes = "Initial stock purchase",
                            ProductID = 2,
                            Quantity = 100,
                            TransactionDate = new DateTime(2024, 8, 17, 13, 20, 11, 661, DateTimeKind.Local).AddTicks(260),
                            TransactionType = "Purchase"
                        },
                        new
                        {
                            TransactionID = 3,
                            Notes = "Initial stock purchase",
                            ProductID = 3,
                            Quantity = 200,
                            TransactionDate = new DateTime(2024, 8, 19, 13, 20, 11, 661, DateTimeKind.Local).AddTicks(264),
                            TransactionType = "Purchase"
                        },
                        new
                        {
                            TransactionID = 4,
                            Notes = "Initial stock purchase",
                            ProductID = 4,
                            Quantity = 150,
                            TransactionDate = new DateTime(2024, 8, 20, 13, 20, 11, 661, DateTimeKind.Local).AddTicks(266),
                            TransactionType = "Purchase"
                        },
                        new
                        {
                            TransactionID = 5,
                            Notes = "Sale to customer",
                            ProductID = 5,
                            Quantity = 30,
                            TransactionDate = new DateTime(2024, 8, 22, 13, 20, 11, 661, DateTimeKind.Local).AddTicks(269),
                            TransactionType = "Sale"
                        });
                });

            modelBuilder.Entity("Inventory_Management__System.Models.Inventory", b =>
                {
                    b.HasOne("Inventory_Management__System.Models.Product", "Product")
                        .WithOne("Inventory")
                        .HasForeignKey("Inventory_Management__System.Models.Inventory", "ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Inventory_Management__System.Models.Product", b =>
                {
                    b.HasOne("Inventory_Management__System.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Inventory_Management__System.Models.Transaction", b =>
                {
                    b.HasOne("Inventory_Management__System.Models.Product", "Product")
                        .WithMany("Transactions")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Inventory_Management__System.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Inventory_Management__System.Models.Product", b =>
                {
                    b.Navigation("Inventory");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
